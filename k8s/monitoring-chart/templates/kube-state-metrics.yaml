apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: {{ required "Namespace is required!" .Values.namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      containers:
        - name: kube-state-metrics
#          image: quay.io/coreos/kube-state-metrics:{{ .Values.metrics.image.tag | default "latest" }}
          image: quay.io/coreos/kube-state-metrics:v1.9.5
          imagePullPolicy: IfNotPresent
          ports:
          - name: http-metrics
            containerPort: 8080
          - name: telemetry
            containerPort: 8081

          resources:
            {{- toYaml .Values.metric_resources | nindent 12 }}

        - name: addon-resizer
          image: k8s.gcr.io/addon-resizer:{{ .Values.addon_resizer.image.tag | default "latest" }}
          imagePullPolicy: IfNotPresent
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          command:
            - /pod_nanny
            - --container=kube-state-metrics
            - --cpu=100m
            - --extra-cpu=1m
            - --memory=100Mi
            - --extra-memory=2Mi
            - --threshold=5
            - --deployment=kube-state-metrics

          resources:
            {{- toYaml .Values.addon_resources | nindent 12 }}
      tolerations:
      - key: node.kubernetes.io/not-ready
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.kubernetes.io/unreachable
        effect: NoExecute
        tolerationSeconds: 0
---
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: {{ required "Namespace is required!" .Values.namespace }}
  labels:
    k8s-app: kube-state-metrics
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  - name: telemetry
    port: 8081
    targetPort: telemetry
    protocol: TCP
  selector:
    k8s-app: kube-state-metrics

