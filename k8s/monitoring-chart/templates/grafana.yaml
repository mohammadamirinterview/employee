apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ required "Namespace is required!" .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      task: monitoring
      k8s-app: grafana
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:{{ .Values.grafana.image.tag | default "latest" }}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3000
            protocol: TCP
          env:
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: grafana-password
                optional: false
          - name: UPGRADEALL
            value: "false"

          volumeMounts:
            - name: ini
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-data
              mountPath: "/var/lib/grafana"

          resources:
            {{- toYaml .Values.grafana_resources | nindent 12 }}

      volumes:
        - name: ini
          configMap:
            name: grafana-ini
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data-pvc

      tolerations:
      - key: node.kubernetes.io/not-ready
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.kubernetes.io/unreachable
        effect: NoExecute
        tolerationSeconds: 0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: grafana
  name: grafana
  namespace: {{ required "Namespace is required!" .Values.namespace }}
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    k8s-app: grafana
